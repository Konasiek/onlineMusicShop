{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/_services/cart.service.ts","./src/app/_services/auth.service.ts","./src/app/_services/order.service.ts","./src/app/model/Order.ts","./src/app/_services/category.service.ts","./src/environments/environment.ts","./src/app/_services/token-storage.service.ts","./src/app/product/product.component.ts","./src/app/product/product.component.html","./src/app/model/CartInOrder.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_services/user.service.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/shipping/shipping.component.ts","./src/app/shipping/shipping.component.html","./src/app/cart/cart.component.ts","./src/app/cart/cart.component.html","./src/app/model/OrderRequest.ts","./src/app/board-admin/board-admin.component.ts","./src/app/board-admin/board-admin.component.html","./src/app/board-moderator/board-moderator.component.ts","./src/app/board-moderator/board-moderator.component.html","./src/app/model/UserInOrder.ts","./src/app/_services/product.service.ts","./src/app/_helpers/auth.interceptor.ts","./src/app/order/order.component.ts","./src/app/order/order.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  form: any = {\r\n    username: null,\r\n    email: null,\r\n    password: null\r\n  };\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const { username, email, password } = this.form;\r\n\r\n    this.authService.register(username, email, password).subscribe(\r\n      data => {\r\n        // console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"col-md-12\">\r\n  <div class=\"card card-container\">\r\n    <img\r\n      id=\"profile-img\"\r\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n      class=\"profile-img-card\"\r\n    />\r\n    <form\r\n      *ngIf=\"!isSuccessful\"\r\n      name=\"form\"\r\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n      #f=\"ngForm\"\r\n      novalidate\r\n    >\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Username</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          name=\"username\"\r\n          [(ngModel)]=\"form.username\"\r\n          required\r\n          minlength=\"3\"\r\n          maxlength=\"20\"\r\n          #username=\"ngModel\"\r\n        />\r\n        <div class=\"alert-danger\" *ngIf=\"username.errors && f.submitted\">\r\n          <div *ngIf=\"username.errors.required\">Username is required</div>\r\n          <div *ngIf=\"username.errors.minlength\">\r\n            Username must be at least 3 characters\r\n          </div>\r\n          <div *ngIf=\"username.errors.maxlength\">\r\n            Username must be at most 20 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          class=\"form-control\"\r\n          name=\"email\"\r\n          [(ngModel)]=\"form.email\"\r\n          required\r\n          email\r\n          #email=\"ngModel\"\r\n        />\r\n        <div class=\"alert-danger\" *ngIf=\"email.errors && f.submitted\">\r\n          <div *ngIf=\"email.errors.required\">Email is required</div>\r\n          <div *ngIf=\"email.errors.email\">\r\n            Email must be a valid email address\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          name=\"password\"\r\n          [(ngModel)]=\"form.password\"\r\n          required\r\n          minlength=\"6\"\r\n          #password=\"ngModel\"\r\n        />\r\n        <div class=\"alert-danger\" *ngIf=\"password.errors && f.submitted\">\r\n          <div *ngIf=\"password.errors.required\">Password is required</div>\r\n          <div *ngIf=\"password.errors.minlength\">\r\n            Password must be at least 6 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button class=\"btn btn-primary btn-block\">Sign Up</button>\r\n      </div>\r\n\r\n      <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\r\n        Signup failed!<br />{{ errorMessage }}\r\n      </div>\r\n    </form>\r\n\r\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\r\n      Your registration is successful!\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {EventEmitter, Injectable, Output} from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CartService {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    cart: string[] = [];\r\n    data: string[] = [];\r\n\r\n    itemsInCart: number;\r\n\r\n\r\n    initCart() {\r\n        sessionStorage.setItem('cart', '');\r\n        return true;\r\n    }\r\n\r\n    retriveCart() {\r\n        if (sessionStorage.getItem('cart')) {\r\n            return JSON.parse(sessionStorage.getItem('cart'));\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    addToCart(product: any, quantity: number) {\r\n\r\n        this.cart = (sessionStorage.getItem('cart') != null) ? JSON.parse(sessionStorage.getItem('cart')) : [];\r\n        this.data = JSON.parse(sessionStorage.getItem('data'));\r\n        let hasMatch: boolean = false;\r\n\r\n        //checking product exists already in a cart\r\n        for (let index = 0; index < this.cart.length; ++index) {\r\n\r\n            let cartIndex = this.cart[index];\r\n\r\n            if (cartIndex['id'] == product['id']) {\r\n                hasMatch = true;\r\n                break;\r\n            }\r\n        }\r\n        if (hasMatch) {\r\n            return false;\r\n        }\r\n\r\n        let total: number = product['price'] * quantity;\r\n        let cartData: any = {\r\n            'id': product['id'],\r\n            'modelName': product['modelName'],\r\n            'producerName': product['producerName'],\r\n            'quantity': quantity,\r\n            'stock': product['stock'],\r\n            'imageURL': product['imageURL'],\r\n            'price': product['price'],\r\n            'total': total\r\n        };\r\n\r\n        this.cart.push(cartData);\r\n        sessionStorage.setItem('cart', JSON.stringify(this.cart));\r\n\r\n        this.getItemsInCart();\r\n\r\n        return true;\r\n    }\r\n\r\n    removeItem(productId: number) {\r\n        this.cart = JSON.parse(sessionStorage.getItem('cart'));\r\n        let tempCart: string[] = [];\r\n\r\n        for (let index = 0; index < this.cart.length; ++index) {\r\n            let cartIndex = this.cart[index];\r\n\r\n            if (cartIndex['id'] != productId) {\r\n                tempCart.push(cartIndex);\r\n            }\r\n        }\r\n        this.cart = tempCart;\r\n        sessionStorage.setItem('cart', JSON.stringify(this.cart));\r\n\r\n        this.getItemsInCart();\r\n\r\n        return this.cart;\r\n    }\r\n\r\n    updateQuantity(productId: number, quantity: number) {\r\n        this.cart = JSON.parse(sessionStorage.getItem('cart'));\r\n        let tempCart: string[] = [];\r\n\r\n        for (let index = 0; index < this.cart.length; ++index) {\r\n            let cartIndex = this.cart[index];\r\n\r\n            if (cartIndex['id'] === productId) {\r\n\r\n                let total: number = cartIndex['price'] * quantity;\r\n                let cartData: any = {\r\n                    'id': cartIndex['id'],\r\n                    'modelName': cartIndex['modelName'],\r\n                    'producerName': cartIndex['producerName'],\r\n                    'quantity': quantity,\r\n                    'stock': cartIndex['stock'],\r\n                    'imageURL': cartIndex['imageURL'],\r\n                    'price': cartIndex['price'],\r\n                    'total': total\r\n                };\r\n\r\n                tempCart.push(cartData);\r\n            } else {\r\n                tempCart.push(cartIndex);\r\n            }\r\n        }\r\n\r\n        this.cart = tempCart;\r\n        sessionStorage.setItem('cart', JSON.stringify(this.cart));\r\n\r\n        return this.cart;\r\n    }\r\n\r\n    getTotal() {\r\n        this.cart = JSON.parse(sessionStorage.getItem('cart'));\r\n        let total: number = 0.00;\r\n\r\n        for (let index = 0; index < this.cart.length; ++index) {\r\n            let cartIndex = this.cart[index];\r\n            total += cartIndex['total'];\r\n        }\r\n        return total;\r\n    }\r\n\r\n    @Output() change: EventEmitter<number> = new EventEmitter<number>();\r\n    getItemsInCart(): void {\r\n        let tempCart = JSON.parse(sessionStorage.getItem('cart'));\r\n        if (tempCart != null) {\r\n            this.itemsInCart = tempCart.length;\r\n        }\r\n        this.change.emit(this.itemsInCart);\r\n    }\r\n\r\n    emptyCart(): void {\r\n        sessionStorage.removeItem('cart');\r\n        this.getItemsInCart();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst AUTH_API = 'http://localhost:8080/api/auth/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signin', {\r\n      username,\r\n      password\r\n    }, httpOptions);\r\n  }\r\n\r\n  register(username: string, email: string, password: string): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signup', {\r\n      username,\r\n      email,\r\n      password\r\n    }, httpOptions);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {OrderRequest} from \"../model/OrderRequest\";\r\n\r\nconst baseUrl = 'http://localhost:8080/api/order';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAll(params): Observable<any> {\r\n        return this.http.get(baseUrl, {params});\r\n    }\r\n\r\n    add(orderRequest: OrderRequest): Observable<any> {\r\n        return this.http.post<OrderRequest>(baseUrl, orderRequest);\r\n    }\r\n}\r\n","import {UserInOrder} from \"./UserInOrder\";\r\nimport {CartInOrder} from \"./CartInOrder\";\r\n\r\nexport class Order {\r\n\r\n    buildingNumberAndApartment: string;\r\n    street?: string;\r\n    city: string;\r\n    country: string;\r\n    postCode: string;\r\n    contactPerson?: string;\r\n    email: string;\r\n    phone: string;\r\n    user: UserInOrder;\r\n    cart: CartInOrder;\r\n\r\n    constructor(buildingNumberAndApartment: string, street: string, city: string, country: string, postCode: string, contactPerson: string, email: string, phone: string, user: UserInOrder, cart: CartInOrder) {\r\n        this.buildingNumberAndApartment = buildingNumberAndApartment;\r\n        this.street = street;\r\n        this.city = city;\r\n        this.country = country;\r\n        this.postCode = postCode;\r\n        this.contactPerson = contactPerson;\r\n        this.email = email;\r\n        this.phone = phone;\r\n        this.user = user;\r\n        this.cart = cart;\r\n    }\r\n}\r\n","import {EventEmitter, Injectable, Output} from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CategoryService{\r\n\r\n    categoryId;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    @Output () change: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n    changeCategory(category) {\r\n        this.categoryId = category;\r\n        this.change.emit(this.categoryId);\r\n    }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'auth-token';\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n  constructor() { }\r\n\r\n  signOut(): void {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string): void {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public getToken(): string | null {\r\n    return window.sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(user: any): void {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser(): any {\r\n    const user = window.sessionStorage.getItem(USER_KEY);\r\n    if (user) {\r\n      return JSON.parse(user);\r\n    }\r\n\r\n    return {};\r\n  }\r\n}\r\n","import {Component, HostBinding, HostListener, OnInit} from '@angular/core';\r\nimport {ProductService} from \"../_services/product.service\";\r\nimport {CategoryService} from \"../_services/category.service\";\r\nimport {CartService} from \"../_services/cart.service\";\r\n\r\n@Component({\r\n    selector: 'app-product',\r\n    templateUrl: './product.component.html',\r\n    styleUrls: ['./product.component.css']\r\n})\r\nexport class ProductComponent implements OnInit {\r\n\r\n    products: any;\r\n    currentIndex = -1;\r\n    searchPhrase = '';\r\n\r\n    page = 1;\r\n    count = 0;\r\n    pageSize = 5;\r\n    pageSizes = [5, 10, 50];\r\n    @HostBinding('class.categoryId')\r\n    categoryId = 0;\r\n\r\n    constructor(private productService: ProductService,\r\n                private categoryService: CategoryService,\r\n                private cartService: CartService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.categoryService.change.subscribe(a => {\r\n            this.categoryId = a;\r\n            this.retrieveProducts();\r\n        });\r\n        this.retrieveProducts();\r\n    }\r\n\r\n    getRequestParams(categoryId, searchPhrase, page, pageSize): any {\r\n        let params = {};\r\n\r\n        if (categoryId) {\r\n            params['categoryId'] = categoryId;\r\n        }\r\n        if (searchPhrase) {\r\n            params['searchPhrase'] = searchPhrase;\r\n        }\r\n        if (page) {\r\n            params['page'] = page - 1;\r\n        }\r\n        if (pageSize) {\r\n            params['size'] = pageSize;\r\n        }\r\n        return params;\r\n    }\r\n\r\n    retrieveProducts(): void {\r\n        const params = this.getRequestParams(this.categoryId, this.searchPhrase, this.page, this.pageSize);\r\n\r\n        this.productService.getAll(params)\r\n            .subscribe(\r\n                response => {\r\n                    const {products, totalItems} = response;\r\n                    this.products = products;\r\n                    this.count = totalItems;\r\n\r\n                    if (totalItems <= this.pageSize) {\r\n                    }\r\n                    console.log(response);\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                })\r\n    }\r\n\r\n    handlePageChange(event): void {\r\n        this.page = event;\r\n        this.retrieveProducts();\r\n    }\r\n\r\n    handlePageSizeChange(event): void {\r\n        this.pageSize = event.target.value;\r\n        this.page = 1;\r\n        this.retrieveProducts();\r\n    }\r\n\r\n    onSearchChange(): void {\r\n        this.page = 1;\r\n        this.retrieveProducts();\r\n    }\r\n\r\n    @HostListener('addToCart')\r\n    addToCart(product: any): void {\r\n        if (product.stock !== 0) {\r\n            this.cartService.addToCart(product, 1);\r\n        } else {\r\n            alert(\"product is out of stock\");\r\n        }\r\n    }\r\n}\r\n","<div class=\"list row\">\r\n    <div class=\"searchBar\">\r\n        <div class=\"input-group mb-3\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search by model or producer\" [(ngModel)]=\"searchPhrase\" (input)=\"onSearchChange()\"/>\r\n            <div class=\"input-group-append\">\r\n                <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"retrieveProducts()\">Search</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col\">\r\n        <div class=\"above-list\">\r\n            <div id=\"abovePhoto\"></div>\r\n            <div id=\"aboveModelName\">model</div>\r\n            <div id=\"aboveProducerName\">producer</div>\r\n            <div id=\"aboveStock\">in stock</div>\r\n            <div id=\"abovePrice\">price</div>\r\n        </div>\r\n        <ul style=\"clear: both\" class=\"list-group\">\r\n            <li class=\"list-group-item\" *ngFor=\"let product of products | paginate : {itemsPerPage: pageSize,currentPage: page,totalItems: count}; let i = index\" [class.active]=\"i == currentIndex\">\r\n                <div id=\"inlistPic\"><img class=\"proPic\" src=\"{{ product.imageURL }}\" alt=\"{{product.modelName}}\"></div>\r\n                <div id=\"modelName\"><p>{{ product.modelName }}</p></div>\r\n                <div id=\"producerName\"><p>{{ product.producerName }}</p></div>\r\n                <div id=\"stock\"><p>{{ product.stock }}</p></div>\r\n                <div id=\"price\"><p>{{ product.price | currency }}</p></div>\r\n                <div id=\"addToCart\"><div id=\"outerButton\"><button class=\"button\" (click)=\"addToCart(product)\">add to cart</button></div></div>\r\n            </li>\r\n        </ul>\r\n        <div class=\"itemsOnPage\">Items per page:\r\n            <select (change)=\"handlePageSizeChange($event)\"><option *ngFor=\"let size of pageSizes\" [ngValue]=\"size\">{{ size }}</option></select>\r\n        </div>\r\n        <div class=\"pagination\">\r\n            <pagination-controls previousLabel=\"\" nextLabel=\"\" responsive=\"true\" (pageChange)=\"handlePageChange($event)\"></pagination-controls>\r\n        </div>\r\n    </div>\r\n</div>\r\n","export class CartInOrder {\r\n\r\n    id?: number;\r\n\r\n    constructor(id?: number) {\r\n        this.id = id;\r\n    }\r\n}\r\n","import {Component, HostBinding, HostListener, OnInit} from '@angular/core';\r\nimport {TokenStorageService} from './_services/token-storage.service';\r\nimport {CategoryService} from \"./_services/category.service\";\r\nimport {CartService} from \"./_services/cart.service\";\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n    private roles: string[] = [];\r\n    isLoggedIn = false;\r\n    showAdminBoard = false;\r\n    showModeratorBoard = false;\r\n    username?: string;\r\n    @HostBinding('class.itemsInCart')\r\n    itemsInCart: number;\r\n\r\n    constructor(private tokenStorageService: TokenStorageService,\r\n                private categoryService: CategoryService,\r\n                private cartService: CartService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n        this.cartService.change.subscribe(a => {\r\n            this.itemsInCart = a;\r\n        });\r\n        this.cartService.getItemsInCart();\r\n\r\n        if (this.isLoggedIn) {\r\n            const user = this.tokenStorageService.getUser();\r\n            this.roles = user.roles;\r\n            this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\r\n            this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\r\n            this.username = user.username;\r\n        }\r\n    }\r\n\r\n    logout(): void {\r\n        this.tokenStorageService.signOut();\r\n        window.location.reload();\r\n    }\r\n\r\n    @HostListener('changeCategory')\r\n    changeCategory(categoryId): void {\r\n        this.categoryService.changeCategory(categoryId);\r\n    }\r\n}\r\n","<div class=\"app\">\r\n    <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n        <a href=\"/product\" class=\"navbar-brand\">musicShop</a>\r\n        <ul class=\"navbar-nav mr-auto\" routerLinkActive=\"active\">\r\n            <li class=\"nav-item\" *ngIf=\"showAdminBoard\">\r\n                <a class=\"nav-link\" routerLink=\"admin\">admin board</a>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"showModeratorBoard\">\r\n                <a class=\"nav-link\" routerLink=\"mod\">moderator board</a>\r\n            </li>\r\n            <li class=\"nav-item\" (click)=\"changeCategory(1)\">\r\n                <a class=\"nav-link\" routerLink=\"product\">guitars</a>\r\n            </li>\r\n            <li class=\"nav-item\" (click)=\"changeCategory(2)\">\r\n                <a class=\"nav-link\" routerLink=\"product\">drums</a>\r\n            </li>\r\n            <li class=\"nav-item\" (click)=\"changeCategory(3)\">\r\n                <a class=\"nav-link\" routerLink=\"product\">keys</a>\r\n            </li>\r\n        </ul>\r\n        <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" routerLink=\"cart\" *ngIf=\"itemsInCart !== 0 && itemsInCart !== undefined\">\r\n                    <div id=\"cartWithItems\">\r\n                        <img src=\"../assets/shoppingCartWithItems.png\" class=\"shoppingCart\">\r\n                        <div id=\"numberOfItems\">{{itemsInCart}}</div>\r\n                    </div>\r\n                </a>\r\n                <a class=\"nav-link\" routerLink=\"cart\" *ngIf=\"(itemsInCart === 0 || itemsInCart === undefined)\">\r\n                    <img src=\"../assets/shoppingCart.png\" class=\"shoppingCart\">\r\n                </a>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\r\n                <a class=\"nav-link\" routerLink=\"order\">orders</a>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\r\n                <a class=\"nav-link\" routerLink=\"profile\">{{ username }}</a>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"!isLoggedIn\">\r\n                <a class=\"nav-link\" routerLink=\"register\">sign up</a>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"!isLoggedIn\">\r\n                <a class=\"nav-link\" routerLink=\"login\">log in</a>\r\n            </li>\r\n            <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\r\n                <a class=\"nav-link\" (click)=\"logout()\">log out</a>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n    <div class=\"container\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst API_URL = 'http://localhost:8080/api/test/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPublicContent(): Observable<any> {\r\n    return this.http.get(API_URL + 'all', { responseType: 'text' });\r\n  }\r\n\r\n  getUserBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'user', { responseType: 'text' });\r\n  }\r\n\r\n  getModeratorBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'mod', { responseType: 'text' });\r\n  }\r\n\r\n  getAdminBoard(): Observable<any> {\r\n    return this.http.get(API_URL + 'admin', { responseType: 'text' });\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {TokenStorageService} from '../_services/token-storage.service';\r\n\r\n@Component({\r\n    selector: 'app-profile',\r\n    templateUrl: './profile.component.html',\r\n    styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n    currentUser: any;\r\n\r\n    constructor(private token: TokenStorageService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.currentUser = this.token.getUser();\r\n    }\r\n}\r\n","<div class=\"container\" *ngIf=\"currentUser; else loggedOut\">\r\n    <header class=\"jumbotron\">\r\n        <h3>\r\n            <strong>{{ currentUser.username }}</strong> Profile\r\n        </h3>\r\n    </header>\r\n    <p>\r\n        <strong>Token:</strong>\r\n        {{ currentUser.accessToken.substring(0, 20) }} ...\r\n        {{ currentUser.accessToken.substr(currentUser.accessToken.length - 20) }}\r\n    </p>\r\n    <p>\r\n        <strong>Email:</strong>\r\n        {{ currentUser.email }}\r\n    </p>\r\n    <p>\r\n        <strong>User id: </strong>{{currentUser.id}}\r\n    </p>\r\n    <strong>Roles:</strong>\r\n    <ul>\r\n        <li *ngFor=\"let role of currentUser.roles\">\r\n            {{ role }}\r\n        </li>\r\n    </ul>\r\n</div>\r\n<ng-template #loggedOut>\r\n    Please login.\r\n</ng-template>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {LoginComponent} from \"./login/login.component\";\r\nimport {ProfileComponent} from \"./profile/profile.component\";\r\nimport {BoardModeratorComponent} from \"./board-moderator/board-moderator.component\";\r\nimport {BoardAdminComponent} from \"./board-admin/board-admin.component\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {RegisterComponent} from \"./register/register.component\";\r\nimport {authInterceptorProviders} from \"./_helpers/auth.interceptor\";\r\nimport {ProductComponent} from './product/product.component';\r\nimport {NgxPaginationModule} from \"ngx-pagination\";\r\nimport {CartComponent} from './cart/cart.component';\r\nimport {ShippingComponent} from './shipping/shipping.component';\r\nimport {OrderComponent} from './order/order.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        LoginComponent,\r\n        RegisterComponent,\r\n        ProfileComponent,\r\n        BoardAdminComponent,\r\n        BoardModeratorComponent,\r\n        ProductComponent,\r\n        CartComponent,\r\n        ShippingComponent,\r\n        OrderComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n        NgxPaginationModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    providers: [authInterceptorProviders],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {CartService} from \"../_services/cart.service\";\r\nimport {OrderService} from \"../_services/order.service\";\r\nimport {Category} from \"../model/Category\";\r\nimport {ProductInOrder} from \"../model/ProductInOrder\";\r\nimport {UserInOrder} from \"../model/UserInOrder\";\r\nimport {CartInOrder} from \"../model/CartInOrder\";\r\nimport {Order} from \"../model/Order\";\r\nimport {OrderRequest} from \"../model/OrderRequest\";\r\nimport {TokenStorageService} from \"../_services/token-storage.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ProductService} from \"../_services/product.service\";\r\n\r\n\r\n@Component({\r\n    selector: 'app-shipping',\r\n    templateUrl: './shipping.component.html',\r\n    styleUrls: ['./shipping.component.css']\r\n})\r\nexport class ShippingComponent implements OnInit {\r\n\r\n    shippingForm: FormGroup;\r\n\r\n    orderRequest: OrderRequest;\r\n\r\n    submitted = false;\r\n\r\n    cart: string[] = [];\r\n    grandTotal: number = 0.00;\r\n    hasItems: boolean;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private cartService: CartService,\r\n        private orderService: OrderService,\r\n        private tokenStorageService: TokenStorageService,\r\n        private productService: ProductService,\r\n        private router: Router) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.shippingForm = this.formBuilder.group({\r\n            bldg_unit: ['', Validators.required],\r\n            street: ['', [Validators.required, Validators.pattern(/^([^0-9]*)$/)]],\r\n            city: ['', [Validators.required, Validators.pattern(/^([^0-9]*)$/)]],\r\n            country: ['', [Validators.required, Validators.pattern(/^([^0-9]*)$/)]],\r\n            postal: ['', Validators.required],\r\n            contactPerson: ['', [Validators.required, Validators.pattern(/^([^0-9]*)$/)]],\r\n            email: ['', [Validators.required, Validators.email]],\r\n            phone: ['', [Validators.required, Validators.pattern(/^[^A-Za-z]+$/), Validators.minLength(9)]]\r\n        });\r\n\r\n        if (this.cartService.retriveCart()) {\r\n            this.initCart();\r\n        }\r\n    }\r\n\r\n    get f() {\r\n        return this.shippingForm.controls;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        if (this.shippingForm.invalid) {\r\n            return;\r\n        } else {\r\n            let listOfProducts: Array<ProductInOrder> = this.cartService.retriveCart();\r\n\r\n            let currentUser = this.tokenStorageService.getUser();\r\n            let userInOrder: UserInOrder = new UserInOrder(currentUser.id);\r\n\r\n            let cartInOrder: CartInOrder = new CartInOrder();\r\n            let order: Order = new Order(\r\n                this.shippingForm.get('bldg_unit').value,\r\n                this.shippingForm.get('street').value,\r\n                this.shippingForm.get('city').value,\r\n                this.shippingForm.get('country').value,\r\n                this.shippingForm.get('contactPerson').value,\r\n                this.shippingForm.get('postal').value,\r\n                this.shippingForm.get('email').value,\r\n                this.shippingForm.get('phone').value,\r\n                userInOrder,\r\n                cartInOrder);\r\n\r\n            this.orderRequest = new OrderRequest(listOfProducts, order);\r\n            this.orderService.add(this.orderRequest).subscribe();\r\n\r\n            // reduce quantity of items in stock\r\n            this.productService.updateQuantity(listOfProducts).subscribe();\r\n\r\n            this.cartService.emptyCart();\r\n            // bad practise\r\n            sessionStorage.setItem('reloadOrder', '1');\r\n            this.router.navigate(['/order']);\r\n        }\r\n    }\r\n\r\n    onReset() {\r\n        this.submitted = false;\r\n        this.shippingForm.reset();\r\n    }\r\n\r\n    initCart() {\r\n        this.cart = this.cartService.retriveCart();\r\n        this.grandTotal = this.cartService.getTotal();\r\n        this.hasItems = (this.cart.length > 0);\r\n    }\r\n}\r\n","<div class=\"shop-checkout-delivery-container col-md-12\">\r\n    <div class=\"shop-checkout-delivery-header\">\r\n        <br>\r\n        <h4>Shipping</h4>\r\n        <br>\r\n    </div>\r\n    <div class=\"shop-checkout-delivery-content\">\r\n        <form [formGroup]=\"shippingForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"leftForm\">\r\n                <div class=\"col-l\">\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label class=\"text\"><strong>Building number/apartment</strong></label>\r\n                            <div class=\"input-group\">\r\n                                <input type=\"text\" formControlName=\"bldg_unit\" class=\"form-control\"\r\n                                       [ngClass]=\"{'is-invalid': submitted && f.bldg_unit.errors}\"/>\r\n                            </div>\r\n                            <div *ngIf=\"submitted\">\r\n                                <div class=\"fieldError\" *ngIf=\"f.bldg_unit.errors?.required\">building number is\r\n                                    required\r\n                                </div>\r\n                                <div class=\"fieldError\" *ngIf=\"f.bldg_unit.errors?.pattern\">letters are not allowed\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label class=\"text\"><strong>Street</strong></label>\r\n                            <div class=\"input-group\">\r\n                                <input type=\"text\" formControlName=\"street\" class=\"form-control\"\r\n                                       [ngClass]=\"{'is-invalid': submitted && f.street.errors}\"/>\r\n                            </div>\r\n                            <div *ngIf=\"submitted && f.street.errors\">\r\n                                <div class=\"fieldError\" *ngIf=\"f.street.errors?.required\">street is required</div>\r\n                                <div class=\"fieldError\" *ngIf=\"f.street.errors?.pattern\">digits are not allowed</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label class=\"text\"><strong>City</strong></label>\r\n                            <div class=\"input-group\">\r\n                                <input type=\"text\" formControlName=\"city\" class=\"form-control\"\r\n                                       [ngClass]=\"{'is-invalid': submitted && f.city.errors}\"/>\r\n                            </div>\r\n                            <div *ngIf=\"submitted && f.city.errors\">\r\n                                <div class=\"fieldError\" *ngIf=\"f.city.errors?.required\">city is required</div>\r\n                                <div class=\"fieldError\" *ngIf=\"f.city.errors?.pattern\">digits are not allowed</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label class=\"text\"><strong>Country</strong></label>\r\n                            <div class=\"input-group\">\r\n                                <input type=\"text\" formControlName=\"country\" class=\"form-control\"\r\n                                       [ngClass]=\"{'is-invalid': submitted && f.country.errors}\"/>\r\n                            </div>\r\n                            <div *ngIf=\"submitted && f.country.errors\">\r\n                                <div class=\"fieldError\" *ngIf=\"f.country.errors?.required\">country is required</div>\r\n                                <div class=\"fieldError\" *ngIf=\"f.country.errors?.pattern\">digits are not allowed</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label class=\"text\"><strong>Post-code</strong></label>\r\n                            <div class=\"input-group\">\r\n                                <input type=\"text\" formControlName=\"postal\" class=\"form-control\"\r\n                                       [ngClass]=\"{'is-invalid': submitted && f.postal.errors}\"/>\r\n                            </div>\r\n                            <div *ngIf=\"submitted && f.postal.errors\">\r\n                                <div class=\"fieldError\" *ngIf=\"f.postal.errors?.required\">post-code is required</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label class=\"text\"><strong>Contact person</strong></label>\r\n                            <div class=\"input-group\">\r\n                                <input type=\"text\" formControlName=\"contactPerson\" class=\"form-control\"\r\n                                       [ngClass]=\"{'is-invalid': submitted && f.contactPerson.errors}\"/>\r\n                            </div>\r\n                            <div *ngIf=\"submitted && f.contactPerson.errors\">\r\n                                <div class=\"fieldError\" *ngIf=\"f.contactPerson.errors?.required\">contact person is\r\n                                    required\r\n                                </div>\r\n                                <div class=\"fieldError\" *ngIf=\"f.contactPerson.errors?.pattern\">digits are not\r\n                                    allowed\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label class=\"text\"><strong>E-mail</strong></label>\r\n                            <div class=\"input-group\">\r\n                                <input type=\"text\" formControlName=\"email\" class=\"form-control\"\r\n                                       [ngClass]=\"{'is-invalid': submitted && f.email.errors}\"/>\r\n                            </div>\r\n                            <div *ngIf=\"submitted && f.email.errors\">\r\n                                <div class=\"fieldError\" *ngIf=\"f.email.errors?.required\">email is required</div>\r\n                                <div class=\"fieldError\" *ngIf=\"f.email.errors?.email\">email is incorrect</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"col-md-12\">\r\n                            <label class=\"text\"><strong>Phone</strong></label>\r\n                            <div class=\"input-group\">\r\n                                <input type=\"text\" formControlName=\"phone\" class=\"form-control\"\r\n                                       [ngClass]=\"{'is-invalid': submitted && f.phone.errors}\"/>\r\n                            </div>\r\n                            <div *ngIf=\"submitted && f.phone.errors\">\r\n                                <div class=\"fieldError\" *ngIf=\"f.phone.errors?.required\">phone number is required</div>\r\n                                <div class=\"fieldError\" *ngIf=\"f.phone.errors?.pattern\">letters are not allowed</div>\r\n                                <div class=\"fieldError\" *ngIf=\"f.phone.errors?.minlength\">minimum number of digits is\r\n                                    9\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"distant\"></div>\r\n                </div>\r\n            </div>\r\n            <div class=\"rightButtons\">\r\n                <div class=\"cartInfo\">\r\n                    <ul class=\"list-group\">\r\n                        <li class=\"list-group-item\" *ngFor=\"let product of cart\">\r\n                            <div id=\"producerName\"><p>{{ product[\"producerName\"] }}</p></div>\r\n                            <div id=\"modelName\"><p>{{ product[\"modelName\"] }}</p></div>\r\n                            <div id=\"price\"><p>{{ product[\"price\"] | currency }}</p></div>\r\n                            <div id=\"quantity\"><p>x{{ product[\"quantity\"] }}</p></div>\r\n                            <div id=\"subTotal\"><p>= {{ product[\"quantity\"] * product[\"price\"] | currency }}</p></div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div id=\"grandTotal\" *ngIf=\"cart.length !== 0\"><strong>Total cost: {{grandTotal | currency}}</strong></div>\r\n                <div class=\"form-actions\">\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"shipButtons\">\r\n                            <button [routerLink]=\"['/cart']\" (click)=\"onReset()\" class=\"button1\">back to cart</button>\r\n                            <button class=\"button2\" type=\"submit\">make an order</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {CartService} from \"../_services/cart.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {TokenStorageService} from \"../_services/token-storage.service\";\r\n\r\n@Component({\r\n    selector: 'app-cart',\r\n    templateUrl: './cart.component.html',\r\n    styleUrls: ['./cart.component.css']\r\n})\r\nexport class CartComponent implements OnInit {\r\n\r\n    cart: string[] = [];\r\n    grandTotal: number = 0.00;\r\n    hasItems: boolean;\r\n\r\n    isLoggedIn = false;\r\n\r\n    constructor(private cartService: CartService,\r\n                private router: Router,\r\n                private tokenStorageService: TokenStorageService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n        if (this.cartService.retriveCart()) {\r\n            this.initCart();\r\n        }\r\n    }\r\n\r\n    initCart() {\r\n        this.cart = this.cartService.retriveCart();\r\n        this.grandTotal = this.cartService.getTotal();\r\n        this.hasItems = (this.cart.length > 0);\r\n    }\r\n\r\n    updateQuantity(productId: number, quantity: number) {\r\n\r\n        if (quantity > 0) {\r\n            this.cart = this.cartService.updateQuantity(productId, quantity);\r\n            this.initCart();\r\n        } else {\r\n            this.initCart();\r\n        }\r\n    }\r\n\r\n    removeItem(id: number) {\r\n        this.cart = this.cartService.removeItem(id);\r\n        this.initCart();\r\n    }\r\n\r\n    goToShipping(): void {\r\n        if (this.isLoggedIn) {\r\n            this.router.navigate(['/shipping']);\r\n        } else {\r\n            this.router.navigate(['/login']);\r\n        }\r\n    }\r\n}\r\n","<div class=\"list row\">\r\n    <div class=\"col\">\r\n        <div class=\"above-list\" *ngIf=\"cart.length !== 0\">\r\n            <br>\r\n            <div id=\"abovePhoto\"></div>\r\n            <div id=\"aboveModelName\">model</div>\r\n            <div id=\"aboveProducerName\">producer</div>\r\n            <div id=\"aboveStock\">in stock</div>\r\n            <div id=\"abovePrice\">price</div>\r\n            <div id=\"aboveQuantity\">quantity</div>\r\n        </div>\r\n        <div style=\"clear: both\" id=\"cartIsEmpty\" *ngIf=\"cart.length === 0\">\r\n            <br><br><h3>Cart is empty</h3>\r\n        </div>\r\n        <ul style=\"clear: both\" class=\"list-group\">\r\n            <li class=\"list-group-item\" *ngFor=\"let product of cart\">\r\n                <div id=\"inlistPic\"><img class=\"proPic\" src=\"{{ product.imageURL }}\" alt=\"{{product.modelName}}\"></div>\r\n                <div id=\"modelName\"><p>{{ product.modelName }}</p></div>\r\n                <div id=\"producerName\"><p>{{ product.producerName }}</p></div>\r\n                <div id=\"stock\"><p>{{ product.stock }}</p></div>\r\n                <div id=\"price\"><p>{{ product.price | currency }}</p></div>\r\n                <div id=\"quantity\"><div id=\"outerButton1\"><input id=\"inputQuantity\" type=\"number\" name=\"quantity\" value=\"{{product.quantity}}\" min=\"1\" max=\"{{product.stock}}\" #quantity (change)=\"updateQuantity(product.id, quantity.value)\"></div></div>\r\n                <div id=\"removeFromCart\"><div id=\"outerButton2\"><button class=\"button\" (click)=\"removeItem(product.id)\">remove</button></div></div>\r\n            </li>\r\n        </ul>\r\n        <div id=\"grandTotal\" *ngIf=\"cart.length !== 0\"><strong>Total cost: {{grandTotal | currency}}</strong></div>\r\n        <div id=\"shipping\" *ngIf=\"cart.length !== 0\"><div id=\"shippingOuter\"><button class=\"button\" (click)=\"goToShipping()\">go to shipping</button></div></div>\r\n    </div>\r\n</div>\r\n","import {Order} from \"./Order\";\r\nimport {ProductInOrder} from \"./ProductInOrder\";\r\n\r\nexport class OrderRequest {\r\n\r\n    productsInOrder: Array<ProductInOrder>;\r\n    order: Order;\r\n\r\n\r\n    constructor(productsInOrder: Array<ProductInOrder>, orderInfo: Order) {\r\n        this.productsInOrder = productsInOrder;\r\n        this.order = orderInfo;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-board-admin',\r\n  templateUrl: './board-admin.component.html',\r\n  styleUrls: ['./board-admin.component.css']\r\n})\r\nexport class BoardAdminComponent implements OnInit {\r\n  content?: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getAdminBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <header class=\"jumbotron\">\r\n    <p>{{ content }}</p>\r\n  </header>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-board-moderator',\r\n  templateUrl: './board-moderator.component.html',\r\n  styleUrls: ['./board-moderator.component.css']\r\n})\r\nexport class BoardModeratorComponent implements OnInit {\r\n  content?: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getModeratorBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <header class=\"jumbotron\">\r\n    <p>{{ content }}</p>\r\n  </header>\r\n</div>\r\n","export class UserInOrder {\r\n\r\n    id: number;\r\n\r\n\r\n    constructor(id: number) {\r\n        this.id = id;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {ProductInOrder} from \"../model/ProductInOrder\";\r\n\r\nconst baseUrl = 'http://localhost:8080/api/product';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAll(params): Observable<any> {\r\n        return this.http.get(baseUrl, {params});\r\n    }\r\n\r\n    updateQuantity(productsToUpdate: Array<ProductInOrder>): Observable<any> {\r\n        return this.http.post<any>(baseUrl, productsToUpdate);\r\n    }\r\n}\r\n","import {HTTP_INTERCEPTORS, HttpEvent} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {HttpInterceptor, HttpHandler, HttpRequest} from '@angular/common/http';\r\nimport {TokenStorageService} from '../_services/token-storage.service';\r\nimport {Observable} from 'rxjs';\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private token: TokenStorageService) {\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        let authReq = req;\r\n        const token = this.token.getToken();\r\n        if (token != null) {\r\n            authReq = req.clone({headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token)});\r\n        }\r\n        return next.handle(authReq);\r\n    }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}\r\n];\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {OrderService} from \"../_services/order.service\";\r\nimport {TokenStorageService} from \"../_services/token-storage.service\";\r\nimport {CartService} from \"../_services/cart.service\";\r\n\r\n@Component({\r\n    selector: 'app-order',\r\n    templateUrl: './order.component.html',\r\n    styleUrls: ['./order.component.css']\r\n})\r\nexport class OrderComponent implements OnInit {\r\n\r\n    orders: any;\r\n    currentIndex = -1;\r\n\r\n    userObj: any;\r\n    user_id: any;\r\n\r\n    page = 1;\r\n    count = 0;\r\n    pageSize = 5;\r\n\r\n    constructor(private orderService: OrderService,\r\n                private tokenStorageService: TokenStorageService,\r\n                private cartService: CartService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.userObj = Object.values(this.tokenStorageService.getUser());\r\n        this.user_id = this.userObj[0];\r\n        this.cartService.retriveCart();\r\n        this.retrieveOrders();\r\n        if (sessionStorage.getItem('reloadOrder')) {\r\n            sessionStorage.removeItem('reloadOrder');\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    getRequestParams(user_id, page, pageSize): any {\r\n        let params = {};\r\n\r\n        if (user_id) {\r\n            params['user_id'] = user_id;\r\n        }\r\n        if (page) {\r\n            params['page'] = page - 1;\r\n        }\r\n        if (pageSize) {\r\n            params['size'] = pageSize;\r\n        }\r\n        return params;\r\n    }\r\n\r\n    retrieveOrders(): void {\r\n        const params = this.getRequestParams(this.user_id, this.page, this.pageSize);\r\n\r\n        this.orderService.getAll(params)\r\n            .subscribe(\r\n                response => {\r\n                    const {orders, totalItems} = response;\r\n                    this.orders = orders;\r\n                    this.count = totalItems;\r\n                    console.log(response);\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                })\r\n    }\r\n\r\n    handlePageChange(event): void {\r\n        this.page = event;\r\n        this.retrieveOrders();\r\n    }\r\n}\r\n","<div class=\"list row\">\r\n    <div class=\"orderTitle\">\r\n        <h3><strong>Your orders</strong></h3>\r\n    </div>\r\n    <div class=\"col\">\r\n        <ul style=\"clear: both\" class=\"list-group\">\r\n            <li class=\"list-group-item\" *ngFor=\"let order of orders | paginate : {itemsPerPage: pageSize,currentPage: page,totalItems: count}; let i = index\" [class.active]=\"i == currentIndex\">\r\n                <div id=\"address\">to: {{order.contactPerson}} {{order.city}}, {{order.street}} {{order.buildingNumberAndApartment}} {{order.country}}</div>\r\n                <ul class=\"productList\">\r\n                    <li class =\"\" *ngFor=\"let productInOrder of order.cart['productsInOrder']\">\r\n                        <div id=\"modelName\">{{productInOrder.modelName}}</div>\r\n                        <div id=\"producerName\">{{productInOrder.producerName}}</div>\r\n                        <div id=\"quantity\">x{{productInOrder.quantity}}</div>\r\n                        <div id=\"productPrice\">{{productInOrder.price | currency}}</div>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n        </ul>\r\n        <div class=\"itemsOnPage\"></div>\r\n        <div class=\"pagination\">\r\n            <pagination-controls previousLabel=\"\" nextLabel=\"\" responsive=\"true\" (pageChange)=\"handlePageChange($event)\"></pagination-controls>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {LoginComponent} from \"./login/login.component\";\r\nimport {RegisterComponent} from \"./register/register.component\";\r\nimport {ProfileComponent} from \"./profile/profile.component\";\r\nimport {BoardModeratorComponent} from \"./board-moderator/board-moderator.component\";\r\nimport {BoardAdminComponent} from \"./board-admin/board-admin.component\";\r\nimport {ProductComponent} from \"./product/product.component\";\r\nimport {CartComponent} from \"./cart/cart.component\";\r\nimport {ShippingComponent} from \"./shipping/shipping.component\";\r\nimport {OrderComponent} from \"./order/order.component\";\r\n\r\nconst routes: Routes = [\r\n    {path: 'login', component: LoginComponent},\r\n    {path: 'register', component: RegisterComponent},\r\n    {path: 'profile', component: ProfileComponent},\r\n    {path: 'mod', component: BoardModeratorComponent},\r\n    {path: 'admin', component: BoardAdminComponent},\r\n    {path: 'product', component: ProductComponent},\r\n    {path: 'cart', component: CartComponent},\r\n    {path: 'shipping', component: ShippingComponent},\r\n    {path: 'order', component: OrderComponent},\r\n    {path: '', redirectTo: 'product', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from '../_services/auth.service';\r\nimport {TokenStorageService} from '../_services/token-storage.service';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    form: any = {\r\n        username: null,\r\n        password: null\r\n    };\r\n    isLoggedIn = false;\r\n    isLoginFailed = false;\r\n    errorMessage = '';\r\n    roles: string[] = [];\r\n\r\n    constructor(private authService: AuthService,\r\n                private tokenStorage: TokenStorageService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.tokenStorage.getToken()) {\r\n            this.isLoggedIn = true;\r\n            this.roles = this.tokenStorage.getUser().roles;\r\n        }\r\n    }\r\n\r\n    onSubmit(): void {\r\n        const {username, password} = this.form;\r\n\r\n        this.authService.login(username, password).subscribe(\r\n            data => {\r\n                this.tokenStorage.saveToken(data.accessToken);\r\n                this.tokenStorage.saveUser(data);\r\n\r\n                this.isLoginFailed = false;\r\n                this.isLoggedIn = true;\r\n                this.roles = this.tokenStorage.getUser().roles;\r\n                this.reloadPage();\r\n            },\r\n            err => {\r\n                this.errorMessage = err.error.message;\r\n                this.isLoginFailed = true;\r\n            }\r\n        );\r\n    }\r\n\r\n    reloadPage(): void {\r\n\r\n        // this.router.navigate(['/product']);\r\n        window.location.reload();\r\n\r\n    }\r\n}\r\n","<div class=\"col-md-12\">\r\n  <div class=\"card card-container\">\r\n    <img\r\n      id=\"profile-img\"\r\n      src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n      class=\"profile-img-card\"\r\n    />\r\n    <form\r\n      *ngIf=\"!isLoggedIn\"\r\n      name=\"form\"\r\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n      #f=\"ngForm\"\r\n      novalidate\r\n    >\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Username</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          name=\"username\"\r\n          [(ngModel)]=\"form.username\"\r\n          required\r\n          #username=\"ngModel\"\r\n        />\r\n        <div\r\n          class=\"alert alert-danger\"\r\n          role=\"alert\"\r\n          *ngIf=\"username.errors && f.submitted\"\r\n        >\r\n          Username is required!\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          name=\"password\"\r\n          [(ngModel)]=\"form.password\"\r\n          required\r\n          minlength=\"6\"\r\n          #password=\"ngModel\"\r\n        />\r\n        <div\r\n          class=\"alert alert-danger\"\r\n          role=\"alert\"\r\n          *ngIf=\"password.errors && f.submitted\"\r\n        >\r\n          <div *ngIf=\"password.errors.required\">Password is required</div>\r\n          <div *ngIf=\"password.errors.minlength\">\r\n            Password must be at least 6 characters\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button class=\"btn btn-primary btn-block\">\r\n          Login\r\n        </button>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <div\r\n          class=\"alert alert-danger\"\r\n          role=\"alert\"\r\n          *ngIf=\"f.submitted && isLoginFailed\"\r\n        >\r\n          Login failed: {{ errorMessage }}\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n    <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\r\n      Logged in as {{ roles }}.\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}